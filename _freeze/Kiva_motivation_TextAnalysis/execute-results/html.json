{
  "hash": "52b549f896f4b3c1f56e4425abf795ad",
  "result": {
    "markdown": "---\ntitle: \"Analysing Text Data to Understand Lender Motivation\"\noutput: \n  html_document:\n    toc: true\n    toc_float: true\n---\n\n\n\n\n------------------------------------------------------------------------\n\n## Introduction\n\nIn this section we continue our analysis of part one of the prompt: motivations for lending. In the previous section we attempted to infer lender motivation from systematic differences in funded and non-funded borrowers; here we directly analyze the free responses provided by lenders using some techniques from text mining. Text mining is a machine learning technique which automates text parsing for the purpose of extracting information and generating insights about the content.\n\nOur data contains two relevant free text columns containing (i) the reasons lenders report for lending and (ii) the intended uses borrowers report for their requested loan amount. By looking at lender's reasons for making a loan we can directly observe their self-reported motivations. By looking at borrowers' intended uses of the loan amount for \"funded\" and \"not funded\" borrowers, we hope to identify specific words used by funded borrowers that might reveal additional information about lender preferences and motivations.\n\n## Setup\n\n### Importing required libraries\n\nBefore we dive into the analysis, we need to import all the required packages.We use the text analysis packages for data cleaning, transformation and lemmatization. We also used some additional packages for visualization. The packages we used are:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#text analysis packages\nlibrary(\"tm\")\nlibrary(\"tidyverse\")\nlibrary(\"textstem\")\n\n#visualization packages\nlibrary(\"wordcloud\")\nlibrary(\"plotly\")\nlibrary(\"colorblindr\")\nlibrary(\"viridis\")\n\nlibrary(\"rmarkdown\")\nlibrary(\"readr\")\nlibrary(\"kableExtra\")\noptions(readr.show_col_types = FALSE)\n```\n:::\n\n\n### Reading the data\n\nWe use the `lender_loans.csv` file for our analysis, which contains the following columns of interest:\n\n-   `loan_because` : free response indicating lender's reason for lending\n-   `use` : free response indicating a borrower's intended use (more flexible than `sector`)\n\nThe data set presented below shows a few rows of these variables.\n\n\n\n```{.r .cell-code}\nkiva_ll <- read_csv(\"data/lender_loans.csv\")\ndata_preview <- subset(kiva_ll, select=c(\"loan_id\",\"loan_because\",\"use\",\"loan_amount\"))\n\n#Specifying rows for which we have data to showcase various reasons provided by lenders for lending\nX <- (data_preview[c(133,165,177,235,298),]) \n\nknitr::kable(X, \"pipe\")\n```\n\n::: {.cell-output-display}\n| loan_id|loan_because                                                                                                       |use                                                                      | loan_amount|\n|-------:|:------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|-----------:|\n|  266770|I have been blessed and want to share those blessings.                                                             |The purchase coffee to resell                                            |        4350|\n|  335801|I can.                                                                                                             |to renovate and change the decorations in his store.                     |        1500|\n|   43610|Just grateful for what I have.  In the name of Christ.                                                             |To buy a air pumping machine for using in her motorbike-washing business |         800|\n|  199343|I've seen how it works...and it works well.                                                                        |To purchase silk materials for her weaving business                      |         400|\n|  389959|We believe that creating and growing businesses are the best ways to raise the standards of living in communities. |to buy clothes for selling in her boutique.                              |         450|\n:::\n\n\nNote that in the preview above, we selected a few particular observations. This was necessary because of the high proportion of missing values in the text columns. Before we proceed with the analysis, we look more closely at missing values.\n\n\n\n```{.r .cell-code}\nlender_missing <- sum(is.na(kiva_ll$loan_because))/nrow(kiva_ll)\nbor_missing <- sum(is.na(kiva_ll$use))/nrow(kiva_ll)\n\nsprintf(\"The proportion of missing values in loan_because column are %f \",round(lender_missing,2))\n```\n\n[1] \"The proportion of missing values in loan_because column are 0.520000 \"\n\n```{.r .cell-code}\nsprintf(\"The proportion of missing values in use column is %f \",round(bor_missing,2))\n```\n\n[1] \"The proportion of missing values in use column is 0.000000 \"\n\n\nTO UPDATE ASSUMPTIONS FOR DATA MISSINGNESS AND WHETHER IT IS MISSING AT RANDOM OR NOT\n\n## Analysis\n\nIn this section, we process the aforementioned free text fields to understand lender motivation. We begin with lender text then move to borrower text. In each portion of the analysis we convert the text fields into corpora (plural for corpus - a format used for text analysis. It organize texts into datasets and is the format most convenient for the $\\texttt{tm}$ package which we will be using), perform data cleaning, and text transformations, and visualize the processed data to generate insights relevant to the prompt.\n\n### Lender text analysis\n\n------------------------------------------------------------------------\n\n#### Creating a corpus\n\nNow that we've identified the relevant data, the first step towards text analysis is to clean the data and convert it to a corpus.\n\nUpon first inspection, we observe multiple special characters present which are not recognized by the typical `UTF-8` encoding of the file. Therefore we first encode the field using `latin1` encoding so that it can recognize these special characters.\n\nWe also observe that each line in our data frame does not represent a unique lender or their reason for lending: if a specific lender lends to multiple borrowers, their reason for lending will reappear as many times in our data as well. This will sway the frequency of the words used. For the purpose of this analysis we will only count each lender once therefore, so that each lender is weighted equally rather than by the number of loans they fund. To accomplish this, we subset our data frame to only contain the unique `lender_ids` and their corresponding reasons for lending as captured in the column `loan_because`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To recognize special characters\nEncoding(kiva_ll$loan_because) <- \"latin1\" \n\nloan_bec <- subset(kiva_ll, select=c(\"lender_id\",\"loan_because\"))\nloan_bec <- unique(loan_bec[ , c(\"lender_id\", \"loan_because\")])\n\n# Convert input data to corpus\ncorpus <- Corpus(VectorSource(as.vector(loan_bec$loan_because))) \n```\n:::\n\n\n<br/>\n\n#### Data Transformation\n\nOnce we have created our corpus, we transform our data via the following steps:\n\n1.  Removing all special characters and punctuation\n\n2.  Converting all text to lower case\n\n3.  Removing all numbers\n\n4.  Removing extra white spaces\n\n5.  Removing \"stop words.\" Stop words refer to common words used in text which do not add any contextual value. For example: 'a','the','as', etc.\n\nBy performing these steps, we are able to get rid of the 'noise' in the data. For example, by converting to lowercase we ensure that data is consistent for analysis. By removing stop words, we enable our text mining algorithm to focus mainly on key words present in the text which are relevant to us.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Define a function to replace characters with space\ntoSpace <- content_transformer(function (x , pattern ) gsub(pattern, \" \", x))\n\ncorpus <- tm_map(corpus, toSpace, \"/\")\ncorpus <- tm_map(corpus, toSpace, \"@\")\ncorpus <- tm_map(corpus, toSpace, \"\\\\|\")\n\n#Convert all text to lower case\ncorpus <- tm_map(corpus, content_transformer(tolower))\n\n# Remove  numbers\ncorpus <- tm_map(corpus, removeNumbers)\n\n# Remove english common stopwords\ncorpus <- tm_map(corpus, removeWords, stopwords(\"english\"))\n\n# Remove punctuation\ncorpus <- tm_map(corpus, removePunctuation)\n\n# Eliminate extra white spaces\ncorpus <- tm_map(corpus, stripWhitespace)\n```\n:::\n\n\n<br/>\n\n#### Lemmatization\n\nLemmatization is a method used in text analysis to remove the inflections and retain only the root or dictionary form of the word. This dictionary form of the word is referred to as the *lemma*. This is done by using morphological analysis. The function `lemmatize_strings` uses a lookup dictionary (Mechura's (2016) English lemmatization list available from the lexicon package) and reduces the strings to their lemma forms. Another method used in text analysis is Stemming. Stemming works by cutting off the affixes (prefix/ suffix). The algorithm looks at common prefixes and suffixes that may occur for a word and reduce it to its stem.\n\nIn our analysis, we use lemmatization because stemming can discard useful information. In the following example, the vector `x` contains different forms of the word *purchase*. We see that when we stem, the suffix of each form of the word is reduced, yielding the same root word *purchas*. When we use lemmatization, our result is the lemma of the word and additional context is retained for the word *purchaser*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c('purchase', 'purchased', 'purchaser', 'purchasing', 'purchases')\n\nstem_words(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"purchas\" \"purchas\" \"purchas\" \"purchas\" \"purchas\"\n```\n:::\n\n```{.r .cell-code}\nlemmatize_words(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"purchase\"  \"purchase\"  \"purchaser\" \"purchase\"  \"purchase\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Lemmatization\ncorpus <-tm_map(corpus, lemmatize_strings)\n```\n:::\n\n\n<br/>\n\n#### Word Frequency Matrix\n\nNow that the data is prepared, we begin our analysis with a word frequency matrix, which displays the frequency of occurrence for each word in our data.\n\nFor this analysis we consider only the raw count of each term, however alternative weighting and normalization schemes are possible in the package as well. We convert the matrix to a data frame for ease of manipulation and sort it in terms of decreasing frequency.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build a term-document matrix\nTextDoc_dtm <- TermDocumentMatrix(corpus)\n\n# Convert data type to matrix\ndtm_m <- as.matrix(TextDoc_dtm)\n\n# Sort by descending value of frequency\ndtm_v <- sort(rowSums(dtm_m),decreasing=TRUE)\n\n#Convert to dataframe\ndtm_d <- data.frame(word = names(dtm_v),freq=dtm_v)\nhead(dtm_d)\n```\n:::\n\n\n<br/>\n\n#### Visualizing the data\n\n**Bar Chart of top 10 most frequent words**\n\nOnce we have our word frequency data frame we can visualize it. First we plot a bar chart to see the 10 most frequent words used by lenders. From our bar chart we see that the most commonly used word is *help*, with a frequency of 869, which is nearly twice that of the next most commonly used word, *people* . This suggests that an altruistic desire to help entrepreneurs may be a significant motivation for Kiva lenders.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Plot the most frequent words\n\nggplot(dtm_d[1:10,])+ aes(x = reorder(word, -freq), y=freq)+\n       geom_bar(stat=\"identity\", fill = \"blue\", alpha=.6, with = 0.5)+\n  xlab(\"Word\")+\n  ylab(\"Frequency\")+\n  theme(axis.text.x=element_text(size=12))+\n  ggtitle(\"Top 10 most frequent words [Lenders]\")\n```\n\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/barchart-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n**Word Cloud**\n\nA word cloud is visual representation of words in the form of a cluster where the size of the word represents its frequency. For our word cloud, we plot all the words in the data set which have a minimum frequency of 5. While the interpretation is similar to the that of the bar chart, this alternative visualization allows us to see more words than could reasonably fit in a bar chart.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1234)\nwordcloud(words = dtm_d$word, freq = dtm_d$freq, min.freq = 5,\n          max.words=100, random.order=FALSE, rot.per=0.40,scale=c(4,0.75),\n          colors=brewer.pal(8, \"Dark2\"))\n```\n\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/wordcloud-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nIn analyzing the text fields reported by lenders, we find that the most common word used is *help*. From the word cloud we observe that most of the words used by lenders seem to be in the sphere of helping people, such as *give*, *make* and *difference* indicating that lenders sign up on Kiva provide support and be of service to entrepreneurs. While help-related words dominate, there ar many less frequently used words, suggesting heterogeneity of lender motivation. Words such as *bless*, *can*, *able* and *fortunate* suggest that lender's are motivated by the abundance of resources at their disposal and are driven to share these resources. Other words such as *empower*, *community*, *succeed* and *achieve* indicate a motivation that stems from a larger picture of society. The choice of words implies their motivation to enable communities to increase control over their lives by helping them become more independent. We may also note that except for *poverty* most of the words used have positive connotations suggesting that lenders tend to focus on the possibility to do good rather than guilt or concern.\n\n### Borrower text analysis\n\n------------------------------------------------------------------------\n\nNext, we look for systematic differences in the words used by funded and non-funded borrowers when describing their intended use for the loans. This may suggest lender preferences and motivations. In this portion of the analysis, we rely on the `status` column, which indicates the current status of the loan, as well as the `use` column, which indicates the borrower's intended use for the requested loan amount.\n\nTo get a better idea of how many loans are funded, we look at the unique values in the `status` column and the number of loans associated with each value. Further, we use these values to create an indicator variable for whether a loan has been funded or not.\n\n\n::: {.cell messgae='false'}\n\n```{.r .cell-code}\n#Looking at unique values and respective loan count in status column\nstatus_table <- kiva_ll %>% \n  group_by(status) %>% \n  summarize(count = length(unique(loan_id))) %>% \n  arrange(desc(count))\n\nstatus_table[\"status\"][status_table[\"status\"] == \"in_repayment\"] <- \"in repayment\"\n\nstatus_table %>% kbl(caption = \"Value counts of status column\",col.names=c(\"Status\", \"No. of loans\") ) %>% \n  kable_classic(bootstrap_options =\"striped\",full_width = F, html_font = \"helvetica\",position = \"center\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style=\"font-family: helvetica; width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Value counts of status column</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Status </th>\n   <th style=\"text-align:right;\"> No. of loans </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> paid </td>\n   <td style=\"text-align:right;\"> 67235 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> in repayment </td>\n   <td style=\"text-align:right;\"> 26964 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> defaulted </td>\n   <td style=\"text-align:right;\"> 1573 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> refunded </td>\n   <td style=\"text-align:right;\"> 973 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> fundraising </td>\n   <td style=\"text-align:right;\"> 239 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> expired </td>\n   <td style=\"text-align:right;\"> 227 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> funded </td>\n   <td style=\"text-align:right;\"> 94 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nThe status column contains 7 unique values. We look at the data dictionary and Kiva website to get a better idea of what each term means. Based on that we make the classification of these terms to our 2 classes funded and not-funded:\n\n-   Funded: $\\texttt{funded, in_repayment, paid, defaulted, refunded}$\n\n-   Not Funded: $\\texttt{expired, fundraising}$\n\nTo define the funded category, we include status values which indicate that a loan has been funded already, irrespective of what the current status of the loan is. To define the non-funded category, we include the status values which indicate that a loan was never funded or is in the process of being funded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating a vector for values which are associated with funded loans\nfunded_vec <- c(\"paid\",\"in_repayment\",\"funded\",\"defaulted\", \"refunded\")\n\n#create indicator variable for Funded or not funded loans\nfunding_stat <- kiva_ll %>% \n  mutate(funding_status = if_else(kiva_ll$status %in% funded_vec, \"Funded\",\"Not Funded\"))\n\n#Create dataframe with unique borrower id, use for loan and corresponding funding status\nloan_use <- unique(funding_stat[ , c(\"borrower_image_id\", \"use\",\"funding_status\")])\n```\n:::\n\n\nWe transform our dataset to create a `funding_status` indicator variable using the definitions above. Next, we separate the data into two data frames - Funded loans and Not funded loans. We then perform the same text analysis steps as we did in the lenders section on the `use` column.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n**Bar Chart**\n\nFirst we plot two bar charts to visualize and compare the top 10 most frequently used words by borrowers whose loans have been funded and not funded.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/borrower barchart-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/borrower barchart-2.png){width=672}\n:::\n:::\n\n\nIn comparing these bar charts, we note that the top 3 words for both funded and not funded loans are the same - *buy*, *purchase* and *business*. The top 2 words also have the approximately more than double the frequency of the others. This implies that most borrowers are applying for loans to be able to source the raw materials for their businesses, regardless of ultimate funding status.\n\nAmong the remaining words we see words like *rice*, *fertilizer,* and *supply* in funded loans whereas these are not present in the not funded loans. These words indicate specificity in borrowers' intended use of the loan amount and further have a connotation of productivity. This suggests that lenders favor borrowers that emphasize what they hope to achieve and articulate a concrete plan. For not funded loans we see the words *food*, *additional* and *pay* which are not present in the funded loans chart. These words have a connotation of deprivation, suggesting that lenders may be less inclined to fund borrowers that communicate a desperate situation.\n\n**Word Cloud**\n\nNext, we create two word clouds, one representing the most common words used by the borrowers whose loans have been funded and the other representing loans that have not been funded. We plot all the words in the data set which have a minimum frequency of 5. While the bar chart displays the top 10 most frequent words, the word cloud gives us a more holistic view of the words used by borrowers when requesting for loans.\n\n\n::: {.cell header='false'}\n\n```{.r .cell-code}\n#Table to see no. of funded and not funded loans\n\nfunding_loans_count <- funding_stat %>% group_by(funding_status) %>% summarize(loan_count = length(unique(loan_id)))\n\nfunding_loans_count %>% kbl(caption = \"Value Counts of funding status\",col.names=c(\"Funding status\", \"No. of loans\")) %>% \n  kable_classic(bootstrap_options =\"striped\",full_width = F, html_font = \"helvetica\",position = \"left\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style=\"font-family: helvetica; width: auto !important; \">\n<caption>Value Counts of funding status</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Funding status </th>\n   <th style=\"text-align:right;\"> No. of loans </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Funded </td>\n   <td style=\"text-align:right;\"> 96834 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Not Funded </td>\n   <td style=\"text-align:right;\"> 465 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell header='false'}\n\n```{.r .cell-code}\n#Borrower Wordcloud - Funded Loans\nset.seed(1234)\n\n\nlayout(matrix(c(1, 2), nrow=2), heights=c(1, 4))\npar(mar=rep(0, 4))\nplot.new()\ntext(x=0.5, y=0.5, \"Wordcloud for Funded Loans\")\nwordcloud(words = funded_dtm_d$word, freq = funded_dtm_d$freq, min.freq = 5, main =\"Wordcloud [Borrowers]\",random.order=FALSE, rot.per=0.40,scale=c(4,0.75),\n          colors=brewer.pal(2, \"Dark2\"))\n```\n\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell header='false'}\n\n```{.r .cell-code}\n#Borrower Wordcloud - Not Funded Loans\nset.seed(1234)\n\nlayout(matrix(c(1, 2), nrow=2), heights=c(1, 4))\npar(mar=rep(0, 4))\nplot.new()\ntext(x=0.5, y=0.5, \"Wordcloud for Not Funded Loans\")\nwordcloud(words = notfunded_dtm_d$word, freq = notfunded_dtm_d$freq, min.freq = 5, main =\"Wordcloud [Borrowers]\",random.order=FALSE, rot.per=0.40,scale=c(4,0.75),\n          colors=brewer.pal(6, \"Dark2\"))\n```\n\n::: {.cell-output-display}\n![](Kiva_motivation_TextAnalysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe biggest difference in the wordclouds between funded and not funded loans is the variety of words depicted in the funded loans word cloud. This is due to the fact that most of the observations in the dataset correspond to funded loans. This offers a larger variety of words among funded loans. We see that the variation in sizes in the funded wordcloud is also limited indicating that there is more variety in the words used rather than certain words used which may motivate lenders. For not funded loans, we see fewer words but they do share similarity to words present in the funded loans word cloud as well.\n\n## Conclusion\n\nIn this tutorial, we analyzed free text fields containing quotes from both lenders and borrowers to understand lender preferences and motivation. We observe that lenders tend to report a desire to help, and hence may be motivated by altruism. Further, we observe that the terms in their statements tend to have a positive connotation, suggesting they may more often be motivated by a sense of abundance and a desire to \"do good\" rather than guilt or concern.\n\nLooking at the text field provided by borrowers, we observe that most borrowers report seeking out loans in order to source raw materials or to purchase resources for their business. When we separate the analysis on the basis of funding status, we note that while there is a lot of overlap, funded borrowers are more likely to use words that communicate productivity and a concrete plan, whereas non-funded borrowers are more likely to use words that communicate deprivation. Combining this with the findings of the lender-based text mining, we conclude that lenders are motivated by a positive desire to help and prefer borrowers which communicate optimism and potential rather than desperation. This could indicate that lenders prefer loan applications which communicate a positive mindset - or simply that they hope to get their money back and see productivity-oriented applications as a safer bet.\n",
    "supporting": [
      "Kiva_motivation_TextAnalysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}