{
  "hash": "5c45ead55c2503fe0fe800817ccb2562",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Data Analysis\"\noutput: \n  html_document:\n  toc: true\n  toc_float: true\n---\n\n\n## Introduction and set-up\n\nIn this section of the tutorial, we guide you through the process of Exploratory Data Analysis (EDA) using the Kiva dataset and prompt introduced in the **Getting Started** section. The purpose of EDA is to perform initial investigation on the data, look for interesting trends, relationships, and anomalies through the use of descriptive statistics and data visualization. The insights generated from this stage will motivate and inspire the subsequent analysis, modelling, and statistical tests performed at the next phase in your DataFest journey.\n\n### Loading packages\n\nSince you've already been through the **Getting Started** tutorial, your R environment is all set up! With the prompt in mind, let's take a look at the data. But first, let's load some useful packages. In this tutorial, we will mainly explore and visualize the data using `tidyverse`, a collection of incredibly useful packages for doing Data Science in $\\texttt{R}$. Since countries in the dataset are recorded as country codes, the package `countrycode` will help to translate country code into country names. `colorblindr` and `viridis` are packages for colors in ggplot2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load packages\nlibrary(tidyverse)\nlibrary(countrycode)\nlibrary(colorblindr)\nlibrary(viridis)\n```\n:::\n\n\n### Overview of the Data\n\nRecall the prompt: **Help understand what motivates people to lend money to developing-nation entrepreneurs and what factors are associated with paying these loans.** There are two parts of the prompt that we need to address, **motivation for lending** and **factors associated with repayment**.\n\nFrom the file names and data dictionary, `lender_loans.csv`, `lenders.csv`, and `loans.csv` seem to be three most relevant files. We can take a quick peek at the data before diving more deeply in.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read data\nlender_loans <- read_csv(\"data/lender_loans.csv\")\nlenders <- read_csv(\"data/lenders.csv\")\nloans <- read_csv(\"data/loans.csv\")\n\n#get the structure of the data\nstr(lender_loans)\nstr(lenders)\nstr(loans)\n```\n:::\n\n\nUsing the `str` function, we can see that in `lender_loans`, we have 125,580 observations of 51 variables; in `lenders`, we have 15,000 observations of 18 variables; and in `loans`, we have 97,183 observations of 75 variables. We can also see the variable names, from which we can narrow down our scope to the variables that are relevant to the prompt for further exploration and analysis.\n\nTo investigate lenders' motivations, we focus on the files `lender_loans` and `lenders`. Potentially useful lender-level variables include `country_code` (lenders' country), `occupation` (lenders' occupation), as well as the time that each lender has been a member of Kiva (variables start with `member_since`). The variable `loan_because` will be particularly revealing since it contains direct quotes from lenders related to their reasons for lending. However, because it contains complex free text data, it requires different analytical approaches that will be covered later in the **Text Analysis** section.\n\nVariables that may contribute to loan repayment include `loan_amount`, `sector`, and `location.code` (borrowers' country). A larger `loan_amount` may be associated with higher risk enterprise. Certain `sectors` may be more profitable than others. The macroeconomic environment of a location may be associated with the success of borrowers.\n\nThere are also some variables that may be relevant to both parts of the prompt, such as the time when the loan request was posted and the loan amount. For instance, in 2008, the world economy underwent a global financial crisis. We might expect that this would have simultaneously increased the demand and decreased the supply of loans. Additionally, we might expect increased defaults as borrowers struggle to repay existing loans. To explore these hypotheses and more, we begin our analysis.\n\n## EDA\n\nWe begin by visualizing the distribution of potentially important variables.\n\n### -- LOOKING AT THE BIG PICTURE --\n\n#### Loan Amount\n\nLet's start simple. To get a general sense of the loan amount, we can plot a histogram with the `loan_amount` on the x-axis and the percentage on the y-axis. Histograms is one of the most basic and direct visualization graphs for continuous variables. We can also color the bars to see the proportion of loans in different statuses to add another layer of information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Format variable names for legend \n#lender_loans$status <- gsub(\"in_repayment\", \"in repayment\", lender_loans$status)\nlender_loans$status <- sub(\"(.)\", \"\\\\U\\\\1\",lender_loans$status,perl=TRUE)\n\n#Plot the Loan amount distribution\nggplot(lender_loans, aes(x = loan_amount, fill = status, width = 0.1)) +\n  geom_bar(aes(y=(..count..)/sum(..count..)), stat = \"bin\", color = \"black\") +\n  xlab(\"Loan amount\") +\n  ylab(\"Percentage\") +\n  scale_fill_OkabeIto()+\n  scale_fill_discrete(name = \"Status\")+\n  ggtitle(\"Distribution of loan amount and the status of each loan amount\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/loan_amount dist-1.png){width=768}\n:::\n:::\n\n\nFrom the graph above we can see that the loan amount has a unimodal, skewed right distribution. The interquartile range of loan amount is \\$600 USD to \\$1975 USD, although loans as high as \\$10,000 USD are observed in the dataset. From this, we see that most loans are relatively small in relation to income in the United States. Examining the distribution of loan status, we see that more than half of the loans have been repaid or are still in repayment, while relatively few loans are in default.\n\nA summary table may be more direct to visualize the proportion of each status:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Format variable names for legend \nloans$status <- gsub(\"in_repayment\", \"in repayment\", loans$status)\nloans$status <- sub(\"(.)\", \"\\\\U\\\\1\", loans$status, perl=TRUE)\n\n#Arrange statuses of loans by frequency\nstatus <- loans %>%\n  drop_na(status) %>% # drop missing values by health variable\n  group_by(status) %>% # specify categorical variable \n  rename(\"Status\" = \"status\") %>% \n  summarize(Frequency = n()) %>% # return counts / frequencies\n  arrange(desc(Frequency)) %>% \n  mutate(Percent = paste0(round(Frequency / nrow(loans) * 100, 2), \"%\"))\n\n#Output the table\ntable1 <- tibble(status)\nknitr::kable(table1, \"pipe\")\n```\n\n::: {.cell-output-display}\n|Status       | Frequency|Percent |\n|:------------|---------:|:-------|\n|Paid         |     67144|69.09%  |\n|In repayment |     26971|27.75%  |\n|Defaulted    |      1563|1.61%   |\n|Refunded     |       973|1%      |\n|Fundraising  |       291|0.3%    |\n|Expired      |       226|0.23%   |\n|Inactive     |        13|0.01%   |\n|Funded       |         2|0%      |\n:::\n:::\n\n\nIn the table, we can tell that approximately 69% of loans are paid, and about 28% are in repayment. Therefore, in general, 98% of loans are being paid or already paid, while fewer than 2% are in default.\n\n#### Loan amount and number of loans across year\n\nNext, we investigate trends over time involving the value and number of loans. From the barchart below, we can see that both the total loan amount and the number of loans issued each year continued to grow until 2012. The highest loan amount borrowed was in the year 2011 at USD 40.2 million. Similarly, the highest of number of loans were taken in the year 2011 as well, at 30,738 loans.\n\nIt appears that Kiva activity plummeted in 2012. However, investigating further we see that the 2012 data only includes values up to April: for all years under `posted_yr`, the corresponding `posted_month` goes from 1 to 12, except for 2012, where `posted_month` stops at 4. Further, we verify by locating Kiva's publicly available financial reporting documents, that Kiva's fiscal year ends on December 31th each year. Hence, the apparent 2012 anomaly is just an artifact of data collection which must be considered in subsequent analysis.\n\n\n::: {.cell header='false'}\n\n```{.r .cell-code}\n# Summarise loan amount by year\nyear_loan_amount <- loans %>%\n  group_by(posted_yr) %>%\n  summarise(Total_amount = sum(loan_amount) / 1000) %>%\n  mutate(year = factor(posted_yr, posted_yr))\n\n# Summarise loan count by year\nyear_loan_count <- loans %>%\n  group_by(posted_yr) %>%\n  summarise(counts = length(unique(loan_id))) %>%\n  mutate(year = factor(posted_yr, posted_yr))\n\n# Clean data\nyear_loan_amount <- na.omit(year_loan_amount)\nyear_loan_count <- na.omit(year_loan_count)\n\npar(mfrow = c(1, 1))\n\n# Plot loan amount by year\nggplot(year_loan_amount) +\n  aes(x = year, y = Total_amount, group = 1, label = Total_amount) +\n  geom_line() +\n  geom_text(size = 3, nudge_y = 1000) +\n  theme(legend.position = \"none\") +\n  xlab(\"Year\") +\n  ylab(\"Total loan amount in USD ('000)\") +\n  scale_fill_OkabeIto()+\n  ggtitle(\"Distribution of Loan amount over the years\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/across year-1.png){width=80%}\n:::\n\n```{.r .cell-code}\n# Plot loan count by year\nggplot(year_loan_count) +\n  aes(x = year, y = counts, group = 1, label = counts) +\n  geom_line() +\n  geom_text(size = 3, nudge_y = 1000) +\n  theme(legend.position = \"none\") +\n  xlab(\"Year\") +\n  ylab(\"Total number of loans\") +\n  scale_fill_OkabeIto()+\n  ggtitle(\"Distribution of number of loans over the years\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/across year-2.png){width=80%}\n:::\n:::\n\n\n#### Loan amount and number of loans across country\n\nNext, we consider geographical trends in the Kiva data. Since there are 65 many countries participating in both lending and borrowing through Kiva, it will be difficult to visualize trends for all countries. To simplify, we select the top 10 countries with the most transactions in the 2011 data (the most recent complete data year). To further simplify our visualization, we omit the incomplete 2012 data.\n\n*Geographical Distribution of Borrowers*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying top 10 borrower countries\ntop_10_borrower_table <- lender_loans %>% \n  group_by(location.country) %>% \n  summarize(total_amount_borrower = sum(loan_amount)) %>% \n  arrange(desc(total_amount_borrower))\ntop_10_bor<- unique(top_10_borrower_table$location.country)[1:10]\n\n# Loan Amount by year\nloan_amount_country <- aggregate(lender_loans$loan_amount, by = list(year = lender_loans$posted_yr, country = lender_loans$location.country), FUN = sum, na.rm = TRUE) %>% \n  rename(\"loan_amount\" = \"x\") %>% \n  mutate(loan_amount = loan_amount/1000) %>% \n  filter(country %in% top_10_bor, year < 2012)\n\n# Bar Chart loan amount vs year by country\nggplot(loan_amount_country) +\n  geom_line(aes(x=year, y=loan_amount, fill = country, color = country)) +\n  xlab(\"Year\") +\n  ylab(\"Total loan count (thousand dollars)\") +\n  scale_fill_viridis(\n  discrete = TRUE,\n  option = \"D\")+\n  ggtitle(\"Top 10 borrower countries by loan amount\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/loan distribution across borrower country-1.png){width=672}\n:::\n:::\n\n\nFrom the graph above, we see that in half of the top ten borrower countries (Mexico, Paraguay, Tajikistan, Tanzania, and United States), the loan amount increased from 2005 to 2011, while Uganda, Cambodia, and Peru reached their peak in 2010 and experienced a decrease in loan amount in 2011. Bolivia had the highest loan amount at \\$4,500,000 ever in 2009, but the loan amount has declined subsequently.\n\n*Geographical Distribution of Lenders*\n\n\n::: {.cell header='false'}\n\n```{.r .cell-code}\n# Identifying top 10 lender countries\ntop_10_lender_table <- lender_loans %>% \n  group_by(country_code) %>% \n  summarize(total_amount_lender = sum(loan_amount)) %>%\n  arrange(desc(total_amount_lender)) %>% \n  na.omit(country_code)\ntop_10_lender<- unique(top_10_lender_table$country_code)[1:10]\n\n# Summarize the loan amount based on the lenders' country by year\ncountry <- aggregate(lender_loans$loan_amount, by = list(year = lender_loans$posted_yr, country = lender_loans$country_code), FUN = sum, na.rm = TRUE)\n\n# Convert coutry codes to country names\ncountry_decoded <- country %>%\n  rename(\"country_name\" = \"country\", \"loan_amount\" = \"x\") %>%\n  filter(country_name %in% top_10_lender, year < 2012) %>%\n  mutate(country_name = countrycode(country_name, \"iso2c\", \"country.name\"))\n\n# Plot the total loan amount by lender countries graph\nggplot(data = country_decoded, aes(x = year, y = log(loan_amount), color = country_name)) +\n  geom_line() +\n  xlab(\"Year\") +\n  ylab(\"Loan amount (log)\") +\n  guides(color = guide_legend(title = \"Country\")) +\n  scale_fill_viridis(\n  discrete = TRUE,\n  option = \"D\")+\n  ggtitle(\"Top 10 lender countries by total loan amount from 2005 to 2012\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/Lenders Trend-1.png){width=672}\n:::\n:::\n\n\nHere, we visualize loans originating in the top ten lender countries over time. In this case, we can improve our visualization by taking the logarithm of the loan amount. This is because the US has a significantly higher total loan amount compared to other countries, due to the fact that Kiva is based in the US. As a result, plotting data in the raw scale makes it difficult to distinguish between all other lenders. We note that all of the top ten lender countries have increased their loan amount over time. While the majority of top lenders are high income countries, with the exception of the Philippines. We might expect that lender motivation may differ in high and low countries, and so this is something to bear in mind and we proceed with the lender-focused analysis.\n\n### -- Part 1: Lender Motivation --\n\nTo understand lender motivation, we begin with some background easily located via Kiva's webiste: Kiva provides a platform where borrowers post their credit needs, and lenders choose how much and to whom they lend. Hence, the decision to lend to a specific borrower is purely up to lenders and may reveal their preferences and motivations. Further, we might look at the characteristics of funded and non-funded borrowers in hopes of identifying patterns.\n\n#### Regional lending trends\n\nWe explore the heterogeneity in lending practices by identifying the top recipient countries ( as determined by the total dollar value of loans received) for each of the top lenders. In the table below, Borrower 1 refers to the top recipient country, Borrower 2 refers to the second largest recipient, and so on. Overall, while Peru and Uganda are popular recipient countries, a variety of countries from Asia, Africa, and South America show up as well. The table reveals that on aggregate, lenders do not prefer borrowers from their own countries. However, the top recipient is often in a region formerly colonized or geographically close to the each lender nation. These historical and geographical connections suggest a possible avenue for further analysis of lender motivation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subset the data set for top 10 lender countries\ntop_lenders <- lender_loans %>%\n  filter(country_code %in% c(\"US\", \"CA\", \"GB\", \"AU\", \"DE\", \"NL\", \"SE\", \"NO\", \"JP\", \"PH\"))\n\n# Find the top borrowers and their loan amounts for each of the lender country \ntop_lender_borrow <- aggregate(top_lenders$loan_amount, by = list(lender_country = top_lenders$country_code, borrower_country <- top_lenders$location.country), FUN = sum, na.rm = TRUE) %>%\n  mutate(lender_country = countrycode(lender_country, \"iso2c\", \"country.name\")) %>%\n  arrange(desc(x)) %>%\n  arrange(lender_country) %>%\n  group_by(lender_country) %>%\n  slice(1, 2, 3) %>% #Subset the top three borrowers for each lender country\n  mutate(x = format(x, big.mark = \",\", trim = TRUE)) %>%\n  rename(\"Loan Amount (USD)\" = \"x\", \"Lender Country\" = \"lender_country\", \"Borrower Country\" = \"Group.2\") %>%\n  group_by(`Lender Country`) %>%\n  mutate(`Borrower 1` = unique(`Borrower Country`)[1], \n         `Borrower 2` = unique(`Borrower Country`)[2], \n         `Borrower 3` = unique(`Borrower Country`)[3]) %>%\n  mutate(`Borrower 1` = ifelse(`Borrower 1` == \n         \"The Democratic Republic of the Congo\", \"DRC\", `Borrower 1`)) %>%\n  select(!c(`Borrower Country`, `Loan Amount (USD)`)) %>% #Reorganize table\n  distinct()\n\n# Format and output the table\nknitr::kable(top_lender_borrow, \"pipe\")\n```\n\n::: {.cell-output-display}\n|Lender Country |Borrower 1 |Borrower 2 |Borrower 3 |\n|:--------------|:----------|:----------|:----------|\n|Australia      |Cambodia   |Peru       |Uganda     |\n|Canada         |Peru       |Uganda     |Bolivia    |\n|Germany        |Peru       |Bolivia    |Cambodia   |\n|Japan          |Paraguay   |Cambodia   |Mongolia   |\n|Netherlands    |Uganda     |Peru       |Bolivia    |\n|Norway         |Uganda     |Bolivia    |Cambodia   |\n|Philippines    |DRC        |Uganda     |Rwanda     |\n|Sweden         |Uganda     |Bolivia    |Peru       |\n|United Kingdom |Uganda     |Peru       |Cambodia   |\n|United States  |Peru       |Uganda     |Bolivia    |\n:::\n:::\n\n\n#### Sector and gender of borrowers\n\nNext, we look at the composition of borrowers to get a better idea of which loans are funded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get unique borrower id and total male female borrower count\nloan_sub <- loans %>%\n  group_by(borrower_image_id) %>%\n  summarize(total_m = sum(borrower_m_count), total_f = sum(borrower_f_count))\n\n# Create new borrower type column based on conditions\nloan_sub <- loan_sub %>%\n  mutate(bor_type = if_else(total_m == 1 & total_f == 0, \"Male\",\n    if_else(total_m == 0 & total_f == 1, \"Female\", \"Group\")\n  ))\n\npc_gender <- subset(loan_sub, loan_sub$bor_type %in% c(\"Male\",\"Female\"))\n\nmerge <- left_join(x = lender_loans, y = pc_gender, by = \"borrower_image_id\")\n\n# Get the total loan amount for each gender\nsec_gender_loan <- merge %>%\n  group_by(sector, bor_type) %>%\n  summarise(tot_amount = sum(loan_amount) / 1000) %>%\n  arrange(desc(tot_amount))\n\n# Generate the gender proportion in borrowers\ntext <- aggregate(sec_gender_loan$tot_amount, by = list(gender = sec_gender_loan$bor_type), FUN=sum)\n\ncat(\"Female proportion:\", text$x[1]/(text$x[1]+text$x[2]), \"Male proportion:\", text$x[2]/(text$x[1]+text$x[2]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFemale proportion: 0.5854564 Male proportion: 0.4145436\n```\n:::\n\n```{.r .cell-code}\npar(mfrow = c(1, 1))\n\nsec_gender_loan <- na.omit(sec_gender_loan)\n\n# Plot the sector by gender loan amounts\nggplot(sec_gender_loan) +\n  aes(x = reorder(sector, tot_amount), y = tot_amount, fill = bor_type, label = tot_amount) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme() +\n  guides(fill=guide_legend(title=\"Borrower Composition\"))+\n  coord_flip() +\n  xlab(\"Sector\") +\n  ylab(\"Total loan amount (thousand dollars)\") +\n  scale_fill_viridis(\n  discrete = TRUE,\n  option = \"D\")+\n  ggtitle(\"Sector vs Loan Amount by Gender\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/Sector loan amount with gender-1.png){width=672}\n:::\n:::\n\n\nOverall, the total loan amount of female borrowers (58.54%) exceeds that of male borrowers (41.45%). Similarly, female borrowers receive the majority of loan dollars. However, in Transportation, Construction, and Manufacturing, males receive a higher loan amount than female, while in Agriculture and Services, the loan amounts received by males and females are comparable. While we cannot conclude that these trends are due to lender preference, these differences suggest avenues for further exploration. For example, we might design our analysis to see if certain sectors are more likely to be funded than others, or if female applicants have a greater probability of having their loan funded. If so, this could suggest the priorities of lenders.\n\n### -- Part 2: Repayment Factors --\n\nNow we consider the second part of the prompt, which asks us to analyze the factors related to loan repayment.\n\nWe hypothesize that the borrower's sector could have a strong impact on the ability of borrowers to repay their loans. To explore this, we visualize the total value of loans by sector and payment status.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summarize the total loan amount and paid loan amount by sectors\nsector_loan <-\n  aggregate(lender_loans$loan_amount, by = list(sector = lender_loans$sector), FUN = sum)\nsector_paid <-\n  mutate(aggregate(lender_loans$paid_amount,\n    by = list(sector = lender_loans$sector),\n    FUN = sum, na.rm = TRUE\n  ))\n\n# Calculate the unpaid loan amount by sector in thousands USD\nby_sector <- sector_loan %>%\n  mutate(x = x/1000) %>% \n  mutate(paid = sector_paid$x/1000) %>%\n  mutate(unpaid = (x - paid)) %>%\n  rename(loan = x)\n\n# Generate status variable and rename the columns\nby_sector <- by_sector[order(by_sector$loan, decreasing = TRUE), ]\nby_sector_paid <- select(by_sector, sector, paid) %>%\n  mutate(status = \"paid\") %>%\n  rename(\"amount\" = \"paid\")\nby_sector_unpaid <- select(by_sector, sector, unpaid) %>%\n  mutate(status = \"unpaid\") %>%\n  rename(\"amount\" = \"unpaid\")\nby_sector <- rbind(by_sector_paid, by_sector_unpaid) %>%\n  group_by(sector)\n\n# Plot the Paid vs Unpaid loan amount by sector\nggplot(by_sector) +\n  aes(x = reorder(sector, amount), y = amount, fill = status, label = amount) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme() +\n  coord_flip() +\n  xlab(\"Sector\") +\n  ylab(\"Loan amount (thousand dollars)\") +\n  scale_fill_viridis(\n  discrete = TRUE,\n  option = \"D\")+\n  ggtitle(\"Paid vs Unpaid Loan Amount by Sector\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/Sector, Paid amount-1.png){width=672}\n:::\n:::\n\n\nThe graph above shows that for most sectors, paid loans well exceed unpaid loans. Of the top five sectors in terms of loan amount, Agriculture has the highest proportion of unpaid loans, around 30%. Of all sectors, Housing and Education have the highest unpaid loans, nearly 50%. Arts has the lowest proportion of unpaid loans, about 18%. Hence, sector seems likely to be an important variable to include in subsequent analysis of loan repayment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize default percent by gender and sector: exclude group loans\nloans_df <- loans %>% \n  filter(borrower_m_count < 2, borrower_f_count<2, \n         (status== \"Defaulted\" | status==\"Paid\")) %>%\n  mutate(borrower_female = ifelse(borrower_f_count ==1, \"Female\", \"Male\")) %>%\n  group_by(sector, borrower_female) %>%\n  dplyr::summarize(default_rate = sum(status == \"Defaulted\")/ n(), \n                   n_borrowers = n())\n\n#Compute the maximum default rate by sector\nloans_temp <- loans_df %>%\n  ungroup(borrower_female) %>%\n  dplyr::summarise(max_default_rate = max(default_rate), \n                   total_n_borrowers = sum(n_borrowers)) %>%\n  arrange(-total_n_borrowers)\n\n#Combine data frames and plot default rate by sector and gender\nleft_join(loans_temp, loans_df,  by = \"sector\") %>%\nggplot(aes(x = reorder(sector, max_default_rate), y = default_rate, fill = as.factor(borrower_female))) +\n  geom_bar(stat = \"identity\", position = position_dodge())  + \n  coord_flip() + \n  scale_fill_viridis(discrete = TRUE) + \n  labs(title = \"Default rate by sector and gender\", y = \"Loan default rate\", \n       x = \"\", fill = \"Borrower sex\")\n```\n\n::: {.cell-output-display}\n![](EDA-Jenny-Final_files/figure-html/Default rate by sector and gender-1.png){width=672}\n:::\n:::\n\n\nFrom the graph above, we can see that in Personal Use, Manufaturing, Housing, and Transportation sectors, males have a higher default rate than females, while in Health, the trend appears to be the opposite. It's worth noting that in Entertainment and Education, female loan defaults are incredibly rare, while in the Wholesale sector only female borrowers defaulted their loans, and male defaults are very rare. In other sectors, the default rates for both males and females are similar. This suggests we might want to consider sector, or potentially sector-sex interactions in our loan repayment analysis.\n\n### Conclusion\n\nIn this section, we observe several interesting trends in regards to lender motivation and loan repayment. In terms of lender motivation, we notice that certain sectors and female borrowers seem disproportionately represented, indicating further directions for analysis. However, we also find that lending patterns vary by lending country, suggesting heterogeneity of lender motivation. In terms of loan repayment, we notice variability in loan default frequency in terms of `sector`. This could reflect a potential predictor of the borrower's ability to repay. However, it is important to note that borrower country could be a confounding variable: if a large borrower nation is dominated by one sector, it may be difficult to disentangle the effect of the sector from the effects of that country's general economic climate. Hence, as we further explore loan repayment factors, it may be necessary to control for regional and country-level effects.\n",
    "supporting": [
      "EDA-Jenny-Final_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}